# Copyright (c) 2013 Shotgun Software Inc.
# 
# CONFIDENTIAL AND PROPRIETARY
# 
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit 
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your 
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights 
# not expressly granted therein are reserved by Shotgun Software Inc.

# Metadata defining the behaviour and requirements for this app

# expected fields in the configuration file for this app
configuration:
    template_work:
        type: template
        fields: context, version, *
        description: A reference to a template which locates a work file on disk.
        allows_empty: True

    template_work_area:
        type: template
        description: A reference to a template which locates the work directory on
                     disk
        allows_empty: True

    template_publish:
        type: template
        fields: context, version, *
        description: A reference to a template which locates a publish file on disk.
        allows_empty: True
           
    template_publish_area:
        type: template
        description: A reference to a template which locates the publish directory on
                     disk
        allows_empty: True
           
    sg_entity_types:
        type: list
        description: "List of Shotgun Entity Types to include in the listings when
                      picking a work area."
        default_value: [Shot, Asset]
        values:
            type: shotgun_entity_type
        allows_empty: True
           
    sg_entity_type_filters:
        type: dict
        description: "Allows you to filter the entity types specified in the sg_entity_types 
                      setting. Uses shotgun API query syntax. For example, if you have specified
                      Shot as an entity type you wish to display in the sg_entity_types setting,
                      but you only want to show shots that are in progress in the task selector
                      UI, you can set this up by specifying a filter. Like this:
                      sg_entity_type_filters: {'Shot': [['sg_status_list', 'is', 'ip']]} "
                      
        default_value: {}
           
           
    allow_task_creation:
        type: bool
        description: Controls whether new tasks can be created from the app.
        default_value: True

    launch_change_work_area_at_startup:
        type: bool
        description: A flag whether to launch a dialog at startup for the user to select 
                     the work area.
        default_value: False

    launch_at_startup:
        type: bool
        description: A flag whether to launch the UI at application startup.
                     This setting is experimental and is not supported on all engines.  
        default_value: False

    hook_scene_operation:
        type: hook
        parameters: [operation, file_path, context, parent_action]
        default_value: "scene_operation_{engine_name}"
        description: All the application specific scene operations (open, save etc) that 
                     the app needs to carry out are collected together in this hook.
        
    hook_copy_file:
        type: hook
        parameters: [source_path, target_path]
        default_value: copy_file
        description: Specify a hook that will be used to copy the file 'source_path' 
                     to 'target_path'.
                     
    hook_name_scene:
        type: hook
        parameters: [app, context]
        default_value: name_scene
        description:Specify a hook that will be used to calculate the value used in name
                    variable of the scene file name.
           
    file_extensions:
        type: list
        description: List of file extensions to be shown in the work files view. If
                     empty then all files that match the template will be shown.
        values:
            type: str
        allows_empty: True
        default_value: []   
  
    saveas_default_name:
      type: str
      description: The default name that gets used by when saving a work file using the
                   save-as command
      default_value: scene

    saveas_prefer_version_up:
      type: bool
      description: Control how the save-as command determines the inital name to be used.  If 
                   set to True then the name from the current scene will be used and the version 
                   incremented.  If False then a new unique name will be used and the version 
                   reset
      default_value: False
            
# the Shotgun fields that this app needs in order to operate correctly
requires_shotgun_fields:

# More verbose description of this item 
display_name: "Manage your Work Files"
description: "Using this app you can change the current work area and 
              browse work files and publishes.  The app additionally 
              provides 'Save As' and 'Change Version' commands for 
              managing work files"
              
# Required minimum versions for this item to run
requires_shotgun_version:
requires_core_version: "v0.14.12"
requires_engine_version: 

# the engines that this app can operate in:
supported_engines: 

# the frameworks required to run this app
frameworks:
    - {"name": "tk-framework-widget", "version": "v0.1.23"}
    
